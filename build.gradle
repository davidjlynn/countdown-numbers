plugins {
  id 'java'
  alias(libs.plugins.springBoot)
  alias(libs.plugins.springDependencyManagement)
  id 'jacoco'
  alias(libs.plugins.sonarqube)
  alias(libs.plugins.spotless)
  alias(libs.plugins.nebulaRelease)
  id("maven-publish")
}

group = 'com.davidjlynn'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(21)
  }
}

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  mavenCentral()
}

ext {
  set('springShellVersion', "3.3.3")
}

dependencies {
  implementation 'org.springframework.shell:spring-shell-starter'
  compileOnly 'org.projectlombok:lombok'
  annotationProcessor 'org.projectlombok:lombok'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.springframework.shell:spring-shell-starter-test'
  testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
  imports {
    mavenBom "org.springframework.shell:spring-shell-dependencies:${springShellVersion}"
  }
}

tasks.named('test') {
  useJUnitPlatform()
}

test {
  finalizedBy jacocoTestReport
}

jacocoTestReport {
  dependsOn test
}

jacocoTestReport {
  reports {
    xml.required = true
  }
}

sonar {
  properties {
    property "sonar.host.url", "https://sonarcloud.io"
    property "sonar.organization", "davidjlynn"
    property "sonar.projectKey", "davidjlynn_countdown-numbers"
  }
}

spotless {
  format 'misc', {
    target '.gitattributes', '.gitignore'
    trimTrailingWhitespace()
    indentWithSpaces(2)
    endWithNewline()
  }
  java {
    importOrder()
    removeUnusedImports()
    googleJavaFormat()
    formatAnnotations()
  }
  groovyGradle {
    greclipse().configFile('spotless.gradle.greclipse.properties')
  }
}

nebulaRelease {
}

publishing {
  publications {
    publication(MavenPublication) {
      from(components.java)
    }
  }
  repositories {
    maven {
      name = "GitHubPackages"
      url = uri("https://maven.pkg.github.com/davidjlynn/countdown-numbers")
      credentials {
        username = System.getenv("GITHUB_ACTOR")
        password = System.getenv("GITHUB_TOKEN")
      }
    }
  }
}